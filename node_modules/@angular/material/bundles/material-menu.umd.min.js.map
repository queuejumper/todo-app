{"version":3,"file":"material-menu.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/menu/menu-errors.ts","../../src/lib/menu/menu-content.ts","../../src/lib/menu/menu-animations.ts","../../src/lib/menu/menu-item.ts","../../src/lib/menu/menu-directive.ts","../../src/lib/menu/menu-trigger.ts","../../src/lib/menu/menu-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nexport function throwMatMenuMissingError() {\n  throw Error(`mat-menu-trigger: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionX() {\n  throw Error(`x-position value must be either 'before' or after'.\n      Example: <mat-menu x-position=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionY() {\n  throw Error(`y-position value must be either 'above' or below'.\n      Example: <mat-menu y-position=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  TemplateRef,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  ViewContainerRef,\n  Inject,\n  OnDestroy,\n} from '@angular/core';\nimport {TemplatePortal, DomPortalOutlet} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\n\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\n@Directive({\n  selector: 'ng-template[matMenuContent]'\n})\nexport class MatMenuContent implements OnDestroy {\n  private _portal: TemplatePortal<any>;\n  private _outlet: DomPortalOutlet;\n\n  constructor(\n    private _template: TemplateRef<any>,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _injector: Injector,\n    private _viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n  attach(context: any = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n\n    this.detach();\n\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n          this._componentFactoryResolver, this._appRef, this._injector);\n    }\n\n    const element: HTMLElement = this._template.elementRef.nativeElement;\n\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\n    this._portal.attach(this._outlet, context);\n  }\n\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport{\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  query,\n  group,\n  sequence,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n */\nexport const matMenuAnimations: {\n  readonly transformMenu: AnimationTriggerMetadata;\n  readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [\n    state('void', style({\n      opacity: 0,\n      // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\n      // as of 4.2, which causes the animation to be skipped if it starts from 0.\n      transform: 'scale(0.01, 0.01)'\n    })),\n    transition('void => enter', sequence([\n      query('.mat-menu-content', style({opacity: 0})),\n      animate('100ms linear', style({opacity: 1, transform: 'scale(1, 0.5)'})),\n      group([\n        query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)',\n          style({opacity: 1})\n        )),\n        animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({transform: 'scale(1, 1)'})),\n      ])\n    ])),\n    transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\n  ]),\n\n\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n    // TODO(crisbeto): this is inside the `transformMenu`\n    // now. Remove next time we do breaking changes.\n    state('showing', style({opacity: 1})),\n    transition('void => *', [\n      style({opacity: 0}),\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n  ])\n};\n\n/**\n * @deprecated\n * @deletion-target 7.0.0\n */\nexport const fadeInItems = matMenuAnimations.fadeInItems;\n\n/**\n * @deprecated\n * @deletion-target 7.0.0\n */\nexport const transformMenu = matMenuAnimations.transformMenu;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport {\n  CanDisable,\n  CanDisableRipple,\n  mixinDisabled,\n  mixinDisableRipple\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nexport class MatMenuItemBase {}\nexport const _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-menu-item]',\n  exportAs: 'matMenuItem',\n  inputs: ['disabled', 'disableRipple'],\n  host: {\n    'role': 'menuitem',\n    'class': 'mat-menu-item',\n    '[class.mat-menu-item-highlighted]': '_highlighted',\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.disabled]': 'disabled || null',\n    '(click)': '_checkDisabled($event)',\n    '(mouseenter)': '_emitHoverEvent()',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: 'menu-item.html',\n})\nexport class MatMenuItem extends _MatMenuItemMixinBase\n    implements FocusableOption, CanDisable, CanDisableRipple, OnDestroy {\n\n  private _document: Document;\n\n  /** Stream that emits when the menu item is hovered. */\n  readonly _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\n\n  /** Whether the menu item is highlighted. */\n  _highlighted: boolean = false;\n\n  /** Whether the menu item acts as a trigger for a sub-menu. */\n  _triggersSubmenu: boolean = false;\n\n  constructor(\n    private _elementRef: ElementRef,\n    @Inject(DOCUMENT) document?: any,\n    private _focusMonitor?: FocusMonitor) {\n\n    // @deletion-target 7.0.0 make `_focusMonitor` and `document` required params.\n    super();\n\n    if (_focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      _focusMonitor.monitor(this._getHostElement(), false);\n    }\n\n    this._document = document;\n  }\n\n  /** Focuses the menu item. */\n  focus(origin: FocusOrigin = 'program'): void {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\n    } else {\n      this._getHostElement().focus();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._getHostElement());\n    }\n\n    this._hovered.complete();\n  }\n\n  /** Used to set the `tabindex`. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Returns the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Prevents the default element actions if it is disabled. */\n  _checkDisabled(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /** Emits to the hover stream. */\n  _emitHoverEvent() {\n    if (!this.disabled) {\n      this._hovered.next(this);\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n    let output = '';\n\n    if (element.childNodes) {\n      const length = element.childNodes.length;\n\n      // Go through all the top-level text nodes and extract their text.\n      // We skip anything that's not a text node to prevent the text from\n      // being thrown off by something like an icon.\n      for (let i = 0; i < length; i++) {\n        if (element.childNodes[i].nodeType === textNodeType) {\n          output += element.childNodes[i].textContent;\n        }\n      }\n    }\n\n    return output.trim();\n  }\n\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, switchMap, take} from 'rxjs/operators';\nimport {matMenuAnimations} from './menu-animations';\nimport {MatMenuContent} from './menu-content';\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n\n\n/** Default `mat-menu` options that can be overridden. */\nexport interface MatMenuDefaultOptions {\n  /** The x-axis position of the menu. */\n  xPosition: MenuPositionX;\n\n  /** The y-axis position of the menu. */\n  yPosition: MenuPositionY;\n\n  /** Whether the menu should overlap the menu trigger. */\n  overlapTrigger: boolean;\n\n  /** Class to be applied to the menu's backdrop. */\n  backdropClass: string;\n\n  /** Whether the menu has a backdrop. */\n  hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nexport const MAT_MENU_DEFAULT_OPTIONS =\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options', {\n      providedIn: 'root',\n      factory: () => ({\n        overlapTrigger: true,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n      })\n    });\n\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 2;\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    matMenuAnimations.transformMenu,\n    matMenuAnimations.fadeInItems\n  ],\n  exportAs: 'matMenu'\n})\nexport class MatMenu implements OnInit, AfterContentInit, MatMenuPanel, OnDestroy {\n  private _keyManager: FocusKeyManager<MatMenuItem>;\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\n  private _previousElevation: string;\n\n  /** Subscription to tab events on the menu panel */\n  private _tabSubscription = Subscription.EMPTY;\n\n  /** Config object to be passed into the menu's ngClass */\n  _classList: {[key: string]: boolean} = {};\n\n  /** Current state of the panel animation. */\n  _panelAnimationState: 'void' | 'enter' = 'void';\n\n  /** Emits whenever an animation on the menu completes. */\n  _animationDone = new Subject<void>();\n\n  /** Parent menu of the current menu panel. */\n  parentMenu: MatMenuPanel | undefined;\n\n  /** Layout direction of the menu. */\n  direction: Direction;\n\n  /** Class to be added to the backdrop element. */\n  @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n  /** Position of the menu in the X axis. */\n  @Input()\n  get xPosition(): MenuPositionX { return this._xPosition; }\n  set xPosition(value: MenuPositionX) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Position of the menu in the Y axis. */\n  @Input()\n  get yPosition(): MenuPositionY { return this._yPosition; }\n  set yPosition(value: MenuPositionY) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** @docs-private */\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  /** List of the items inside of a menu. */\n  @ContentChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n\n  /**\n   * Menu content that will be rendered lazily.\n   * @docs-private\n   */\n  @ContentChild(MatMenuContent) lazyContent: MatMenuContent;\n\n  /** Whether the menu should overlap its trigger. */\n  @Input()\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\n  set overlapTrigger(value: boolean) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n\n  /** Whether the menu has a backdrop. */\n  @Input()\n  get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n  set hasBackdrop(value: boolean | undefined) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n  private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  @Input('class')\n  set panelClass(classes: string) {\n    if (classes && classes.length) {\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n        obj[className] = true;\n        return obj;\n      }, {});\n\n      this._elementRef.nativeElement.className = '';\n      this.setPositionClasses();\n    }\n  }\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @deletion-target 7.0.0\n   */\n  @Input()\n  get classList(): string { return this.panelClass; }\n  set classList(classes: string) { this.panelClass = classes; }\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n      new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n  /**\n   * Event emitted when the menu is closed.\n   * @deprecated Switch to `closed` instead\n   * @deletion-target 7.0.0\n   */\n  @Output() close = this.closed;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\n\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this.items).withWrap().withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('tab'));\n  }\n\n  ngOnDestroy() {\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered(): Observable<MatMenuItem> {\n    if (this.items) {\n      return this.items.changes.pipe(\n        startWith(this.items),\n        switchMap(items => merge(...items.map(item => item._hovered)))\n      );\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this._hovered()));\n  }\n\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case ESCAPE:\n        this.closed.emit('keydown');\n        event.stopPropagation();\n      break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n      break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n      break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n    if (this.lazyContent) {\n      this._ngZone.onStable.asObservable()\n        .pipe(take(1))\n        .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n    } else {\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n    }\n  }\n\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n\n  /**\n   * It's necessary to set position-based classes to ensure the menu panel animation\n   * folds out from the correct direction.\n   */\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\n    this._classList['mat-menu-before'] = posX === 'before';\n    this._classList['mat-menu-after'] = posX === 'after';\n    this._classList['mat-menu-above'] = posY === 'above';\n    this._classList['mat-menu-below'] = posY === 'below';\n  }\n\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n  setElevation(depth: number): void {\n    // The elevation starts at the base and increases by one for each level.\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n\n  /** Starts the enter animation. */\n  _startAnimation() {\n    // @deletion-target 7.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    // @deletion-target 7.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone() {\n    this._animationDone.next();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin, isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {filter, take} from 'rxjs/operators';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Subscription, merge, of as observableOf} from 'rxjs';\nimport {MatMenu} from './menu-directive';\nimport {throwMatMenuMissingError} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n\n/** Injection token that determines the scroll handling while the menu is open. */\nexport const MAT_MENU_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy', {\n      providedIn: 'root',\n      factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n      }\n    });\n\n/** Default top padding of the menu panel. */\nexport const MENU_PANEL_TOP_PADDING = 8;\n\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\n@Directive({\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n  host: {\n    'aria-haspopup': 'true',\n    '(mousedown)': '_handleMousedown($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(click)': '_handleClick($event)',\n  },\n  exportAs: 'matMenuTrigger'\n})\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef | null = null;\n  private _menuOpen: boolean = false;\n  private _closeSubscription = Subscription.EMPTY;\n  private _hoverSubscription = Subscription.EMPTY;\n\n  // Tracking input type is necessary so it's possible to only auto-focus\n  // the first item of the list when the menu is opened via the keyboard\n  private _openedByMouse: boolean = false;\n\n  /**\n   * @deprecated\n   * @deletion-target 7.0.0\n   */\n  @Input('mat-menu-trigger-for')\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel {\n    return this.menu;\n  }\n\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\n    this.menu = v;\n  }\n\n  /** References the menu instance that the trigger is associated with. */\n  @Input('matMenuTriggerFor') menu: MatMenuPanel;\n\n  /** Data to be passed along to any lazily-rendered content. */\n  @Input('matMenuTriggerData') menuData: any;\n\n  /** Event emitted when the associated menu is opened. */\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is opened.\n   * @deprecated Switch to `menuOpened` instead\n   * @deletion-target 7.0.0\n   */\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\n\n  /** Event emitted when the associated menu is closed. */\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is closed.\n   * @deprecated Switch to `menuClosed` instead\n   * @deletion-target 7.0.0\n   */\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\n\n  constructor(private _overlay: Overlay,\n              private _element: ElementRef,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_MENU_SCROLL_STRATEGY) private _scrollStrategy,\n              @Optional() private _parentMenu: MatMenu,\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\n              @Optional() private _dir: Directionality,\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n              // @deletion-target 7.0.0\n              private _focusMonitor?: FocusMonitor) {\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._checkMenu();\n\n    this.menu.close.subscribe(reason => {\n      this._destroyMenu();\n\n      // If a click closed the menu, we should close the entire chain of nested menus.\n      if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n        this._parentMenu.closed.emit(reason);\n      }\n    });\n\n    if (this.triggersSubmenu()) {\n      // Subscribe to changes in the hovered item in order to toggle the panel.\n      this._hoverSubscription = this._parentMenu._hovered()\n          .pipe(filter(active => active === this._menuItemInstance))\n          .subscribe(() => {\n            this._openedByMouse = true;\n            this.openMenu();\n          });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._cleanUpSubscriptions();\n  }\n\n  /** Whether the menu is open. */\n  get menuOpen(): boolean {\n    return this._menuOpen;\n  }\n\n  /** The text direction of the containing app. */\n  get dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu(): boolean {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  /** Opens the menu. */\n  openMenu(): void {\n    if (this._menuOpen) {\n      return;\n    }\n\n    this._createOverlay().attach(this._portal);\n\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.menuData);\n    }\n\n    this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    this._initMenu();\n\n    if (this.menu instanceof MatMenu) {\n      this.menu._startAnimation();\n    }\n  }\n\n  /** Closes the menu. */\n  closeMenu(): void {\n    this.menu.close.emit();\n  }\n\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin: FocusOrigin = 'program') {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._element.nativeElement, origin);\n    } else {\n      this._element.nativeElement.focus();\n    }\n  }\n\n  /** Closes the menu and does the necessary cleanup. */\n  private _destroyMenu() {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n\n    const menu = this.menu;\n\n    this._resetMenu();\n    this._closeSubscription.unsubscribe();\n    this._overlayRef.detach();\n\n    if (menu instanceof MatMenu) {\n      menu._resetAnimation();\n\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone\n          .pipe(take(1))\n          .subscribe(() => menu.lazyContent!.detach());\n      }\n    } else if (menu.lazyContent) {\n      menu.lazyContent.detach();\n    }\n  }\n\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n  private _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n    this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\n  }\n\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n  private _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let depth = 0;\n      let parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n\n  /**\n   * This method resets the menu when it's closed, most importantly restoring\n   * focus to the menu trigger if the menu was opened via the keyboard.\n   */\n  private _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    // We should reset focus if the user is navigating using a keyboard or\n    // if we have a top-level trigger which might cause focus to be lost\n    // when clicking on the backdrop.\n    if (!this._openedByMouse) {\n      // Note that the focus style will show up both for `program` and\n      // `keyboard` so we don't have to specify which one it is.\n      this.focus();\n    } else if (!this.triggersSubmenu()) {\n      this.focus('mouse');\n    }\n\n    this._openedByMouse = false;\n  }\n\n  // set state rather than toggle to support triggers sharing a menu\n  private _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   */\n  private _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  private _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      const config = this._getOverlayConfig();\n      this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n      this._overlayRef = this._overlay.create(config);\n    }\n\n    return this._overlayRef;\n  }\n\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getPosition(),\n      hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      direction: this.dir,\n      scrollStrategy: this._scrollStrategy()\n    });\n  }\n\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n    position.positionChanges.subscribe(change => {\n      const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n      const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n      this.menu.setPositionClasses(posX, posY);\n    });\n  }\n\n  /**\n   * This method builds the position strategy for the overlay, so the menu is properly connected\n   * to the trigger.\n   * @returns ConnectedPositionStrategy\n   */\n  private _getPosition(): FlexibleConnectedPositionStrategy {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    return this._overlay.position()\n        .flexibleConnectedTo(this._element)\n        .withPositions([\n          {originX, originY, overlayX, overlayY, offsetY},\n          {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n          {\n            originX,\n            originY: originFallbackY,\n            overlayX,\n            overlayY: overlayFallbackY,\n            offsetY: -offsetY\n          },\n          {\n            originX: originFallbackX,\n            originY: originFallbackY,\n            overlayX: overlayFallbackX,\n            overlayY: overlayFallbackY,\n            offsetY: -offsetY\n          }\n        ]);\n  }\n\n  /** Cleans up the active subscriptions. */\n  private _cleanUpSubscriptions(): void {\n    this._closeSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  private _menuClosingActions() {\n    const backdrop = this._overlayRef!.backdropClick();\n    const detachments = this._overlayRef!.detachments();\n    const parentClose = this._parentMenu ? this._parentMenu.close : observableOf();\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\n      filter(active => active !== this._menuItemInstance),\n      filter(() => this._menuOpen)\n    ) : observableOf();\n\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      this._openedByMouse = true;\n\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n      this.openMenu();\n    }\n  }\n\n  /** Handles click events on the trigger. */\n  _handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatMenuContent} from './menu-content';\nimport {MatMenu} from './menu-directive';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuTrigger} from './menu-trigger';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    MatRippleModule,\n    OverlayModule,\n  ],\n  exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\n  declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n})\nexport class MatMenuModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","attach","context","_portal","TemplatePortal","detach","_outlet","DomPortalOutlet","createElement","element","elementRef","nativeElement","insertBefore","outletElement","isAttached","ngOnDestroy","dispose","type","Directive","args","selector","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","undefined","decorators","Inject","DOCUMENT","matMenuAnimations","transformMenu","trigger","state","style","opacity","transform","transition","sequence","query","animate","group","fadeInItems","MatMenuItemBase","_MatMenuItemMixinBase","mixinDisableRipple","mixinDisabled","MatMenuItem","_elementRef","document","_focusMonitor","_this","_super","call","_hovered","Subject","_highlighted","_triggersSubmenu","monitor","_getHostElement","tslib_1.__extends","focus","origin","focusVia","stopMonitoring","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_emitHoverEvent","next","getLabel","textNodeType","TEXT_NODE","output","childNodes","length_1","length","i","nodeType","textContent","trim","Component","exportAs","inputs","host","role","class","[class.mat-menu-item-highlighted]","[class.mat-menu-item-submenu-trigger]","[attr.tabindex]","[attr.aria-disabled]","[attr.disabled]","(click)","(mouseenter)","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","FocusMonitor","MAT_MENU_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","overlapTrigger","xPosition","yPosition","backdropClass","MatMenu","_ngZone","_defaultOptions","_xPosition","_yPosition","_tabSubscription","Subscription","EMPTY","_classList","_panelAnimationState","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","closed","EventEmitter","close","defineProperty","value","setPositionClasses","coerceBooleanProperty","classes","split","reduce","obj","className","panelClass","ngOnInit","ngAfterContentInit","_keyManager","FocusKeyManager","items","withWrap","withTypeAhead","tabOut","subscribe","emit","unsubscribe","changes","pipe","startWith","switchMap","merge","apply","map","item","onStable","asObservable","take","_handleKeydown","keyCode","ESCAPE","LEFT_ARROW","parentMenu","direction","RIGHT_ARROW","onKeydown","focusFirstItem","lazyContent","setFocusOrigin","setFirstItemActive","resetActiveItem","setActiveItem","posX","posY","setElevation","depth","newElevation","customElevation","keys","find","c","startsWith","_previousElevation","_startAnimation","_resetAnimation","_onAnimationDone","styles","animations","propDecorators","Input","templateRef","ViewChild","ContentChildren","ContentChild","classList","Output","MAT_MENU_SCROLL_STRATEGY","overlay","inject","Overlay","scrollStrategies","reposition","MatMenuTrigger","_overlay","_element","_scrollStrategy","_parentMenu","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closeSubscription","_hoverSubscription","_openedByMouse","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","menu","v","_checkMenu","reason","_destroyMenu","filter","active","openMenu","_cleanUpSubscriptions","toggleMenu","closeMenu","_createOverlay","menuData","_menuClosingActions","_initMenu","menuOpen","_resetMenu","dir","_setMenuElevation","_setIsMenuOpen","isOpen","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","positionStrategy","_getPosition","scrollStrategy","position","positionChanges","change","connectionPair","overlayX","overlayY","_a","originX","originFallbackX","_b","overlayFallbackY","_c","originY","originFallbackY","_d","overlayFallbackX","offsetY","flexibleConnectedTo","withPositions","backdrop","backdropClick","detachments","parentClose","observableOf","hover","_handleMousedown","isFakeMousedownFromScreenReader","_handleClick","aria-haspopup","(mousedown)","(keydown)","ElementRef","Optional","Self","Directionality","_deprecatedMatMenuTriggerFor","NgModule","imports","CommonModule","MatCommonModule","MatRippleModule","OverlayModule","exports","declarations","MatMenuModule"],"mappings":"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"}